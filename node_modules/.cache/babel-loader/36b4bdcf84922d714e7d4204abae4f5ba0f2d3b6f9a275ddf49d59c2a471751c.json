{"ast":null,"code":"var _jsxFileName = \"/Users/jigyansu_nanda/Desktop/shortest-path-visualizer/src/components/tutorial/Tutorial.js\";\nimport \"./Tutorial.css\";\nimport Card from \"react-bootstrap/Card\";\nimport CardGroup from \"react-bootstrap/CardGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconImage = require(\"./media/icon.png\");\nconst sourceImage = require(\"./media/source.png\");\nconst destinationImage = require(\"./media/destination.png\");\nconst wallImage = require(\"./media/wall.png\");\nconst createWall = require(\"./media/createWall.gif\");\nconst move = require(\"./media/move.gif\");\nconst algoInfo = require(\"./media/algoinfo.gif\");\nconst Tutorial = props => {\n  if (props.modalID === 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"welcome\",\n        children: \"Welcome to Shortest Path Visualizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"This short guide is an user-manual for all the features in this application.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"modal1\",\n        children: [\"It is \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"strongly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 27\n        }, this), \" recommended to go thorugh this tutorial. But feel free to skip.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconImage,\n        className: \"app-icon\",\n        alt: \"app icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  } else if (props.modalID === 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal2\",\n        children: \"What does the images represent ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: sourceImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Source Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: wallImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Walls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: destinationImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Destination Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal2-div2\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal2-p\",\n          children: \"You can move source and destination nodes around and create walls to block nodes from being visited\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  } else if (props.modalID === 3) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal3\",\n        children: \"How to create walls ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"modal3-p\",\n        children: \"To create walls, click on an empty cell and drag the cursor around. Finally release it to stop creating walls.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: createWall,\n        className: \"create-wall\",\n        alt: \"how to create wall\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  } else if (props.modalID === 4) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal3\",\n        children: \"How to move source and destination ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"modal3-p\",\n        children: \"To move source and destination around, click on correspodning cells and drag them to desired empty cells and release.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: move,\n        className: \"move\",\n        alt: \"how to move source and destination\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal3\",\n        children: \"Meet The Algorithms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: algoInfo,\n        className: \"algo-info\",\n        alt: \"algorithms information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n};\n_c = Tutorial;\nexport default Tutorial;\nvar _c;\n$RefreshReg$(_c, \"Tutorial\");","map":{"version":3,"names":["Card","CardGroup","iconImage","require","sourceImage","destinationImage","wallImage","createWall","move","algoInfo","Tutorial","props","modalID"],"sources":["/Users/jigyansu_nanda/Desktop/shortest-path-visualizer/src/components/tutorial/Tutorial.js"],"sourcesContent":["import \"./Tutorial.css\";\nimport Card from \"react-bootstrap/Card\";\nimport CardGroup from \"react-bootstrap/CardGroup\";\n\nconst iconImage = require(\"./media/icon.png\");\n\nconst sourceImage = require(\"./media/source.png\");\nconst destinationImage = require(\"./media/destination.png\");\nconst wallImage = require(\"./media/wall.png\");\n\nconst createWall = require(\"./media/createWall.gif\");\nconst move = require(\"./media/move.gif\");\nconst algoInfo = require(\"./media/algoinfo.gif\");\n\nconst Tutorial = (props) => {\n    if (props.modalID === 1) {\n        return (\n            <div>\n                <h1 className=\"welcome\">Welcome to Shortest Path Visualizer</h1>\n                <h3>\n                    This short guide is an user-manual for all the features in\n                    this application.\n                </h3>\n                <p className=\"modal1\">\n                    It is <span>strongly</span> recommended to go thorugh this\n                    tutorial. But feel free to skip.\n                </p>\n                <img src={iconImage} className=\"app-icon\" alt=\"app icon\" />\n            </div>\n        );\n    } else if (props.modalID === 2) {\n        return (\n            <div>\n                <h2 className=\"modal2\">What does the images represent ?</h2>\n                {/* <div className=\"node-icon-div\">\n                    <p className=\"modal2-p\">\n                        Source:\n                        <img\n                            src={sourceImage}\n                            className=\"node-icons-1\"\n                            alt=\"source node icon\"\n                        />\n                    </p>\n                    <p className=\"modal2-p\">\n                        Destination:&nbsp;&nbsp;{\" \"}\n                        <img\n                            src={destinationImage}\n                            className=\"node-icons-2\"\n                            alt=\"destination node icon\"\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;{\" \"}\n                    </p>\n                    <p className=\"modal2-p\">\n                        Walls:&nbsp;&nbsp;{\" \"}\n                        <img\n                            src={wallImage}\n                            className=\"node-icons-3\"\n                            alt=\"wall icon\"\n                        />\n                    </p>\n                </div> */}\n\n                <CardGroup>\n                    <Card>\n                        <Card.Img variant=\"top\" src={sourceImage} />\n                        <Card.Body>\n                            <Card.Title>Source Node</Card.Title>\n                        </Card.Body>\n                    </Card>\n                    <Card>\n                        <Card.Img variant=\"top\" src={wallImage} />\n                        <Card.Body>\n                            <Card.Title>Walls</Card.Title>\n                        </Card.Body>\n                    </Card>\n                    <Card>\n                        <Card.Img variant=\"top\" src={destinationImage} />\n                        <Card.Body>\n                            <Card.Title>Destination Node</Card.Title>\n                        </Card.Body>\n                    </Card>\n                </CardGroup>\n\n                <div className=\"modal2-div2\">\n                    <p className=\"modal2-p\">\n                        You can move source and destination nodes around and\n                        create walls to block nodes from being visited\n                    </p>\n                </div>\n            </div>\n        );\n    } else if (props.modalID === 3) {\n        return (\n            <div>\n                <h2 className=\"modal3\">How to create walls ?</h2>\n                <p className=\"modal3-p\">\n                    To create walls, click on an empty cell and drag the cursor\n                    around. Finally release it to stop creating walls.\n                </p>\n                <img\n                    src={createWall}\n                    className=\"create-wall\"\n                    alt=\"how to create wall\"\n                />\n            </div>\n        );\n    } else if (props.modalID === 4) {\n        return (\n            <div>\n                <h2 className=\"modal3\">How to move source and destination ?</h2>\n                <p className=\"modal3-p\">\n                    To move source and destination around, click on\n                    correspodning cells and drag them to desired empty cells and\n                    release.\n                </p>\n                <img\n                    src={move}\n                    className=\"move\"\n                    alt=\"how to move source and destination\"\n                />\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <h2 className=\"modal3\">Meet The Algorithms</h2>\n                <img\n                    src={algoInfo}\n                    className=\"algo-info\"\n                    alt=\"algorithms information\"\n                />\n            </div>\n        );\n    }\n};\n\nexport default Tutorial;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}