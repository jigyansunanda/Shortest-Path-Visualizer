{"ast":null,"code":"import Queue from \"../data-structures/Queue.js\";\nconst [totalRows, totalCols] = [20, 30];\nconst dx = [0, 1, 0, -1];\nconst dy = [1, 0, -1, 0];\nconst BFS = (grid, src, dst) => {\n  let distance = [];\n  for (let row = 0; row < totalRows; ++row) {\n    let d = [];\n    for (let col = 0; col < totalCols; ++col) {\n      d.push(Infinity);\n    }\n    distance.push(d);\n  }\n  distance[src.row][src.col] = 0;\n  let q = new Queue();\n  q.enqueue(src);\n  while (q.empty() === false) {\n    let curr = q.dequeue();\n    // if (curr.isDestination === true) return [distance[curr.row][curr.col]];\n    for (let dir = 0; dir < 4; ++dir) {\n      let r = curr.row + dx[dir];\n      let c = curr.col + dy[dir];\n      if (r >= 0 && c >= 0 && r < totalRows && c < totalCols) {\n        let adj = grid[r][c];\n        if (adj.isWall === false) {\n          if (adj.isVisited === false) {\n            distance[adj.row][adj.col] = distance[curr.row][curr.col] + 1;\n            if (adj.isDestination === true) return [distance[dst.row][dst.col]];\n            adj.isVisited = true;\n            q.enqueue(adj);\n          }\n        }\n      }\n    }\n  }\n  return [distance[dst.row][dst.col]];\n};\n_c = BFS;\nexport default BFS;\nvar _c;\n$RefreshReg$(_c, \"BFS\");","map":{"version":3,"names":["Queue","totalRows","totalCols","dx","dy","BFS","grid","src","dst","distance","row","d","col","push","Infinity","q","enqueue","empty","curr","dequeue","dir","r","c","adj","isWall","isVisited","isDestination"],"sources":["/Users/jigyansu_nanda/Desktop/shortest-path-visualizer/src/algorithms/BFS.js"],"sourcesContent":["import Queue from \"../data-structures/Queue.js\";\nconst [totalRows, totalCols] = [20, 30];\n\nconst dx = [0, 1, 0, -1];\nconst dy = [1, 0, -1, 0];\n\nconst BFS = (grid, src, dst) => {\n    let distance = [];\n    for (let row = 0; row < totalRows; ++row) {\n        let d = [];\n        for (let col = 0; col < totalCols; ++col) {\n            d.push(Infinity);\n        }\n        distance.push(d);\n    }\n    distance[src.row][src.col] = 0;\n    let q = new Queue();\n    q.enqueue(src);\n    while (q.empty() === false) {\n        let curr = q.dequeue();\n        // if (curr.isDestination === true) return [distance[curr.row][curr.col]];\n        for (let dir = 0; dir < 4; ++dir) {\n            let r = curr.row + dx[dir];\n            let c = curr.col + dy[dir];\n            if (r >= 0 && c >= 0 && r < totalRows && c < totalCols) {\n                let adj = grid[r][c];\n                if (adj.isWall === false) {\n                    if (adj.isVisited === false) {\n                        distance[adj.row][adj.col] =\n                            distance[curr.row][curr.col] + 1;\n                        if (adj.isDestination === true)\n                            return [distance[dst.row][dst.col]];\n                        adj.isVisited = true;\n                        q.enqueue(adj);\n                    }\n                }\n            }\n        }\n    }\n    return [distance[dst.row][dst.col]];\n};\n\nexport default BFS;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,6BAA6B;AAC/C,MAAM,CAACC,SAAS,EAAEC,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;AAEvC,MAAMC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACxB,MAAMC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAExB,MAAMC,GAAG,GAAG,CAACC,IAAI,EAAEC,GAAG,EAAEC,GAAG,KAAK;EAC5B,IAAIC,QAAQ,GAAG,EAAE;EACjB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGT,SAAS,EAAE,EAAES,GAAG,EAAE;IACtC,IAAIC,CAAC,GAAG,EAAE;IACV,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGV,SAAS,EAAE,EAAEU,GAAG,EAAE;MACtCD,CAAC,CAACE,IAAI,CAACC,QAAQ,CAAC;IACpB;IACAL,QAAQ,CAACI,IAAI,CAACF,CAAC,CAAC;EACpB;EACAF,QAAQ,CAACF,GAAG,CAACG,GAAG,CAAC,CAACH,GAAG,CAACK,GAAG,CAAC,GAAG,CAAC;EAC9B,IAAIG,CAAC,GAAG,IAAIf,KAAK,EAAE;EACnBe,CAAC,CAACC,OAAO,CAACT,GAAG,CAAC;EACd,OAAOQ,CAAC,CAACE,KAAK,EAAE,KAAK,KAAK,EAAE;IACxB,IAAIC,IAAI,GAAGH,CAAC,CAACI,OAAO,EAAE;IACtB;IACA,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,CAAC,EAAE,EAAEA,GAAG,EAAE;MAC9B,IAAIC,CAAC,GAAGH,IAAI,CAACR,GAAG,GAAGP,EAAE,CAACiB,GAAG,CAAC;MAC1B,IAAIE,CAAC,GAAGJ,IAAI,CAACN,GAAG,GAAGR,EAAE,CAACgB,GAAG,CAAC;MAC1B,IAAIC,CAAC,IAAI,CAAC,IAAIC,CAAC,IAAI,CAAC,IAAID,CAAC,GAAGpB,SAAS,IAAIqB,CAAC,GAAGpB,SAAS,EAAE;QACpD,IAAIqB,GAAG,GAAGjB,IAAI,CAACe,CAAC,CAAC,CAACC,CAAC,CAAC;QACpB,IAAIC,GAAG,CAACC,MAAM,KAAK,KAAK,EAAE;UACtB,IAAID,GAAG,CAACE,SAAS,KAAK,KAAK,EAAE;YACzBhB,QAAQ,CAACc,GAAG,CAACb,GAAG,CAAC,CAACa,GAAG,CAACX,GAAG,CAAC,GACtBH,QAAQ,CAACS,IAAI,CAACR,GAAG,CAAC,CAACQ,IAAI,CAACN,GAAG,CAAC,GAAG,CAAC;YACpC,IAAIW,GAAG,CAACG,aAAa,KAAK,IAAI,EAC1B,OAAO,CAACjB,QAAQ,CAACD,GAAG,CAACE,GAAG,CAAC,CAACF,GAAG,CAACI,GAAG,CAAC,CAAC;YACvCW,GAAG,CAACE,SAAS,GAAG,IAAI;YACpBV,CAAC,CAACC,OAAO,CAACO,GAAG,CAAC;UAClB;QACJ;MACJ;IACJ;EACJ;EACA,OAAO,CAACd,QAAQ,CAACD,GAAG,CAACE,GAAG,CAAC,CAACF,GAAG,CAACI,GAAG,CAAC,CAAC;AACvC,CAAC;AAAC,KAlCIP,GAAG;AAoCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}