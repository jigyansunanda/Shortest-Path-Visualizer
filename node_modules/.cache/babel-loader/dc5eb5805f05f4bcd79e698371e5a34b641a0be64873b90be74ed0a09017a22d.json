{"ast":null,"code":"var _jsxFileName = \"/Users/jigyansu_nanda/Desktop/shortest-path-visualizer/src/components/grid/Grid.js\";\nimport \"./Grid.css\";\nimport Node from \"./node/Node\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateRandomNumber = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst [totalRows, totalCols] = [20, 40];\nvar sourceRow = 10;\nvar sourceCol = 5;\nvar destinationRow = 10;\nvar destinationCol = 15;\nvar grid = Array.from(Array(totalRows), () => new Array(totalCols));\nvar weights = Array.from(Array(totalRows), () => new Array(totalCols));\nconst addWeights = () => {\n  for (let row = 0; row < totalRows; ++row) {\n    for (let col = 0; col < totalCols; ++col) {\n      weights[row][col] = generateRandomNumber(10, 30);\n      grid[row][col] = weights[row][col];\n    }\n  }\n};\naddWeights();\nconst Grid = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-grid\",\n      children: grid.map((row, row_index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: row.map((column, column_index) => {\n            return /*#__PURE__*/_jsxDEV(Node, {\n              nodeType: \"node\",\n              nodeWeight: weights[row_index][column_index]\n            }, column_index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this);\n          })\n        }, row_index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shortest-path-result\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Shortest path is impossible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["Node","generateRandomNumber","min","max","Math","ceil","floor","random","totalRows","totalCols","sourceRow","sourceCol","destinationRow","destinationCol","grid","Array","from","weights","addWeights","row","col","Grid","map","row_index","column","column_index"],"sources":["/Users/jigyansu_nanda/Desktop/shortest-path-visualizer/src/components/grid/Grid.js"],"sourcesContent":["import \"./Grid.css\";\nimport Node from \"./node/Node\";\n\nconst generateRandomNumber = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst [totalRows, totalCols] = [20, 40];\n\nvar sourceRow = 10;\nvar sourceCol = 5;\nvar destinationRow = 10;\nvar destinationCol = 15;\n\nvar grid = Array.from(Array(totalRows), () => new Array(totalCols));\nvar weights = Array.from(Array(totalRows), () => new Array(totalCols));\n\nconst addWeights = () => {\n    for (let row = 0; row < totalRows; ++row) {\n        for (let col = 0; col < totalCols; ++col) {\n            weights[row][col] = generateRandomNumber(10, 30);\n            grid[row][col] = weights[row][col];\n        }\n    }\n};\n\naddWeights();\n\nconst Grid = () => {\n    return (\n        <div className=\"board\">\n            <div className=\"full-grid\">\n                {grid.map((row, row_index) => {\n                    return (\n                        <div key={row_index} className=\"row\">\n                            {row.map((column, column_index) => {\n                                return (\n                                    <Node\n                                        key={column_index}\n                                        nodeType=\"node\"\n                                        nodeWeight={\n                                            weights[row_index][column_index]\n                                        }\n                                    />\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n            <div className=\"shortest-path-result\">\n                <p>Shortest path is impossible</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Grid;\n"],"mappings":";AAAA,OAAO,YAAY;AACnB,OAAOA,IAAI,MAAM,aAAa;AAAC;AAE/B,MAAMC,oBAAoB,GAAG,CAACC,GAAG,EAAEC,GAAG,KAAK;EACvCD,GAAG,GAAGE,IAAI,CAACC,IAAI,CAACH,GAAG,CAAC;EACpBC,GAAG,GAAGC,IAAI,CAACE,KAAK,CAACH,GAAG,CAAC;EACrB,OAAOC,IAAI,CAACE,KAAK,CAACF,IAAI,CAACG,MAAM,EAAE,IAAIJ,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;AAC5D,CAAC;AAED,MAAM,CAACM,SAAS,EAAEC,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;AAEvC,IAAIC,SAAS,GAAG,EAAE;AAClB,IAAIC,SAAS,GAAG,CAAC;AACjB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AAEvB,IAAIC,IAAI,GAAGC,KAAK,CAACC,IAAI,CAACD,KAAK,CAACP,SAAS,CAAC,EAAE,MAAM,IAAIO,KAAK,CAACN,SAAS,CAAC,CAAC;AACnE,IAAIQ,OAAO,GAAGF,KAAK,CAACC,IAAI,CAACD,KAAK,CAACP,SAAS,CAAC,EAAE,MAAM,IAAIO,KAAK,CAACN,SAAS,CAAC,CAAC;AAEtE,MAAMS,UAAU,GAAG,MAAM;EACrB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGX,SAAS,EAAE,EAAEW,GAAG,EAAE;IACtC,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGX,SAAS,EAAE,EAAEW,GAAG,EAAE;MACtCH,OAAO,CAACE,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGnB,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC;MAChDa,IAAI,CAACK,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGH,OAAO,CAACE,GAAG,CAAC,CAACC,GAAG,CAAC;IACtC;EACJ;AACJ,CAAC;AAEDF,UAAU,EAAE;AAEZ,MAAMG,IAAI,GAAG,MAAM;EACf,oBACI;IAAK,SAAS,EAAC,OAAO;IAAA,wBAClB;MAAK,SAAS,EAAC,WAAW;MAAA,UACrBP,IAAI,CAACQ,GAAG,CAAC,CAACH,GAAG,EAAEI,SAAS,KAAK;QAC1B,oBACI;UAAqB,SAAS,EAAC,KAAK;UAAA,UAC/BJ,GAAG,CAACG,GAAG,CAAC,CAACE,MAAM,EAAEC,YAAY,KAAK;YAC/B,oBACI,QAAC,IAAI;cAED,QAAQ,EAAC,MAAM;cACf,UAAU,EACNR,OAAO,CAACM,SAAS,CAAC,CAACE,YAAY;YAClC,GAJIA,YAAY;cAAA;cAAA;cAAA;YAAA,QAKnB;UAEV,CAAC;QAAC,GAXIF,SAAS;UAAA;UAAA;UAAA;QAAA,QAYb;MAEd,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBACjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAkC;MAAA;MAAA;MAAA;IAAA,QAChC;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,KA3BIF,IAAI;AA6BV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}