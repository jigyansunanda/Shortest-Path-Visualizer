{"ast":null,"code":"/*\ncustom implemented Queue (a FIFO data structure, i.e.\nthe item inserted first into the Queue gets processed/removed first),\nto be used in Breadth First Search, Topological Sorting\n*/\n\n// const maxSize = 100000;\n\nclass Queue {\n  constructor() {\n    this.queue = [];\n  }\n\n  // insert item into Queue\n  enqueue(key) {\n    this.queue.push(key);\n    console.log(this.queue.length);\n  }\n\n  // remove item from the front of queue\n  dequeue() {\n    return this.queue.shift();\n  }\n\n  // return size of Queue\n  size() {\n    return this.queue.length;\n  }\n\n  // check whether queue is empty or not\n  empty() {\n    return this.queue.length === 0;\n  }\n}\nexport default Queue;","map":{"version":3,"names":["Queue","constructor","queue","enqueue","key","push","console","log","length","dequeue","shift","size","empty"],"sources":["/Users/jigyansu_nanda/Desktop/shortest-path-visualizer/src/data-structures/Queue.js"],"sourcesContent":["/*\ncustom implemented Queue (a FIFO data structure, i.e.\nthe item inserted first into the Queue gets processed/removed first),\nto be used in Breadth First Search, Topological Sorting\n*/\n\n// const maxSize = 100000;\n\nclass Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    // insert item into Queue\n    enqueue(key) {\n        this.queue.push(key);\n        console.log(this.queue.length);\n    }\n\n    // remove item from the front of queue\n    dequeue() {\n        return this.queue.shift();\n    }\n\n    // return size of Queue\n    size() {\n        return this.queue.length;\n    }\n\n    // check whether queue is empty or not\n    empty() {\n        return this.queue.length === 0;\n    }\n}\n\nexport default Queue;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMA,KAAK,CAAC;EACRC,WAAW,GAAG;IACV,IAAI,CAACC,KAAK,GAAG,EAAE;EACnB;;EAEA;EACAC,OAAO,CAACC,GAAG,EAAE;IACT,IAAI,CAACF,KAAK,CAACG,IAAI,CAACD,GAAG,CAAC;IACpBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,KAAK,CAACM,MAAM,CAAC;EAClC;;EAEA;EACAC,OAAO,GAAG;IACN,OAAO,IAAI,CAACP,KAAK,CAACQ,KAAK,EAAE;EAC7B;;EAEA;EACAC,IAAI,GAAG;IACH,OAAO,IAAI,CAACT,KAAK,CAACM,MAAM;EAC5B;;EAEA;EACAI,KAAK,GAAG;IACJ,OAAO,IAAI,CAACV,KAAK,CAACM,MAAM,KAAK,CAAC;EAClC;AACJ;AAEA,eAAeR,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}